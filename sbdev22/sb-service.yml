version: "3"

services:
  eureka-discovery:
    container_name: eureka-discovery
    image: smilebat96/cloud-eureka-discovery:latest
    ports:
      - 8761:8761
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
    networks:
      - sbdev22_postgres
#  cloud-auth:
#    container_name: cloud-auth
#    image: smilebat96/cloud-auth-service:latest
#    ports:
#      - 8080:8080
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 10s
#        max_attempts: 5
#        window: 60s
#    depends_on:
#      - eureka-discovery
#    networks:
#      - sbdev22_postgres
#    environment:
#      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-discovery:8761/eureka
#      FEIGN_CLIENT_URL_KEYCLOAK: http://host.docker.internal:8085/auth
#      KEYCLOAK_RESTURL: http://localhost:8085/auth/realms
#      KEYCLOAK_BASEURL: http://localhost:8085/auth/realms
#      KEYCLOAK_REALM_NAME: master
#      KEYCLOAK_REALM_CLIENTID: nginx
#      KEYCLOAK_REALM_CLIENTSECRET: JvdVr02zXQjN2xGaCYZ5RKab0KXNG6gJ
#      KEYCLOAK_REALM_REDIRECTURI: http://localhost:3000/smile-bat/dashboard
  zookeeper:
     container_name: zookeeper
     image: 'bitnami/zookeeper:latest'
     ports:
       - '2181:2181'
     networks:
       - sbdev22_postgres
     environment:
       - ALLOW_ANONYMOUS_LOGIN=yes
      
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '29092:29092'
    networks:
      - sbdev22_postgres
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - sbdev22_postgres
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
      
networks:
  sbdev22_postgres:
    external: true
    
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
