map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


server {
    listen 80;

    listen [::]:80;

    server_name localhost;

    location / {
        proxy_pass http://38.242.132.44:8080/;
        proxy_http_version 1.1;
    }

    location /auth/token {
        proxy_pass http://38.242.132.44:8090;
        proxy_redirect http://38.242.132.44:8090 $scheme://$http_host/;
        proxy_http_version 1.1;
    }

    location /auth/logout {
        proxy_pass http://38.242.132.44:8090;
        proxy_redirect http://38.242.132.44:8090 $scheme://$http_host/;
        proxy_http_version 1.1;
    }


    location /auth {
        proxy_pass http://38.242.132.44:8085/auth;
        proxy_redirect http://38.242.132.44:8085/auth $scheme://$http_host/;
        proxy_http_version 1.1;
    }

    location /auth/realms {
        proxy_pass http://38.242.132.44:8085/auth/realms;
        proxy_redirect http://38.242.132.44:8085/auth/realms $scheme://$http_host/;
        proxy_http_version 1.1;
    }

    location /swagger {
        proxy_pass http://38.242.132.44:8089/swagger-ui.html;
        proxy_redirect http://38.242.132.44:8089/swagger-ui.html $scheme://$http_host/;
        proxy_http_version 1.1;
    }

    location /api/v1 {
        proxy_pass http://38.242.132.44:8089/api/v1;
        proxy_redirect http://38.242.132.44:8089/api/v1 $scheme://$http_host/;
        proxy_http_version 1.1;
    }


}


server {

    listen 8080;
    listen [::]:8080;

    #server_name smilebat.xyz www.smilebat.xyz;

    root /opt/nginx/html;
    resolver 127.0.0.11 valid=1s ipv6=off;

    # access_by_lua "
    # local opts = {
    #     redirect_uri_path = ':3000/smile-bat/dashboard',
    #     accept_none_alg = true,
    #     discovery = 'http://host.docker.internal:8085/realms/master/.well-known/openid-configuration',
    #     client_id = 'nginx',
    #     client_secret = 'C3viypdyA684IYXSWZ5pKQT9qU6Tws4a',
    #     redirect_uri_scheme = 'http',
    #     logout_path = '/logout',
    #     redirect_after_logout_uri = 'http://host.docker.internal:8085/realms/master/protocol/openid-connect/logout?redirect_uri=http://localhost:3000/smile-bat/dashboard',
    #     redirect_after_logout_with_id_token_hint = false,
    #     session_contents = {
    #         id_token=true
    #     }
    # }
    # -- call introspect for OAuth 2.0 Bearer Access Token validation
    # local res, err = require('resty.openidc').authenticate(opts)
    # if err then
    # ngx.status = 403
    # ngx.say(err)
    # ngx.exit(ngx.HTTP_FORBIDDEN)
    # end
    # ";

    
    location / {
        access_by_lua_block {
            local opts = {
                redirect_uri = 'http://localhost:3000/smile-bat/dashboard',
                accept_none_alg = true,
                discovery = 'http://host.docker.internal:8085/realms/master/.well-known/openid-configuration',
                client_id = 'nginx',
                client_secret = 'C3viypdyA684IYXSWZ5pKQT9qU6Tws4a',
                redirect_uri_scheme = 'http',
                logout_path = '/logout',
                redirect_after_logout_uri = 'http://host.docker.internal:8085/realms/master/protocol/openid-connect/logout?redirect_uri=http://localhost:3000/smile-bat/dashboard',
                redirect_after_logout_with_id_token_hint = false,
                session_contents = {
                    id_token=true
                }
            }
            local res, err = require('resty.openidc').authenticate(opts)
            if err then
            ngx.status = 403
            ngx.say(err)
            ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }
    }

    # Disabled caching so the browser won't cache the site.
    expires 0;
    add_header Cache-Control private;

    # redirect server error pages to the static page /40x.html
    #
    error_page 404 /404.html;
    location = /40x.html {
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }


}

