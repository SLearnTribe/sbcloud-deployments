version: '3'

volumes:
  postgres_data:
      driver: local
  pgadmin:

services:
  postgres:
      image: docker.io/bitnami/postgresql:latest
      environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=keycloak
      - POSTGRESQL_DATABASE=keycloak
      - POSTGRES_PASSWORD=password
      volumes:
        - 'postgres_data:/var/lib/postgresql/data'
      ports:
        - 5432:5432
      networks:
        - postgres
      restart: always
  keycloak:
      image: bitnami/keycloak
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        KEYCLOAK_DATABASE_HOST: postgres
        KEYCLOAK_DATABASE_PORT: 5432
        KEYCLOAK_DATABASE_NAME: keycloak
        KEYCLOAK_DATABASE_USER: keycloak
        KEYCLOAK_DATABASE_SCHEMA: public
        KEYCLOAK_DATABASE_PASSWORD: password
        KEYCLOAK_CREATE_ADMIN_USER: admin
        KEYCLOAK_ADMIN_USER: admin
        KEYCLOAK_ADMIN_PASSWORD: password
        KEYCLOAK_LOGLEVEL: INFO
        KC_HOSTNAME: host.docker.internal:8085
        #KC_HOSTNAME_STRICT: 'true'
        KC_HOSTNAME_STRICT_BACKCHANNEL: 'true'
        #KC_HOSTNAME_PORT: 8085
        #KC_HOSTNAME_ADMIN: localhost
        KEYCLOAK_FRONTEND_URL: localhost:8085
        PROXY_ADDRESS_FORWARDING: 'true'
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8085:8080
      volumes:
        - ./themes/mock:/opt/bitnami/keycloak/themes/mock
      depends_on:
        - postgres
      networks:
        - postgres
      restart: always
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: always

networks:
  postgres:
    driver: bridge
